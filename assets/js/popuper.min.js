var Popup;
Popup = function() {
	function t(t) {
		var e;
		this.config = {
			bgClass: "popup-bg",
			popupClass: "popup",
			contentClass: "popup-content",
			closeClass: "close-popup",
			trigger: "open-popup",
			hiddenClass: "hidden",
			visibleClass: "visible",
			duration: 500,
			responsive: !1,
			"static": !1,
			beforeShow: function() {},
			afterShow: function() {
				$('body').css('overflow-y','');
			},
			beforeHide: function() {},
			afterHide: function() {
				$('body').css('overflow-y','auto');
			}
		};
		for (e in t) this.config[e] = t[e];
		this.popupState = this.config.hiddenClass, this.bgState = this.config.hiddenClass, this.bg = document.createElement("div"), this.popup = document.createElement("div"), this.content = document.createElement("div"), this.closeBtn = document.createElement("div"), this.openLinks = document.getElementsByClassName(this.config.trigger), this.updateState(), this.makeMarkup(), this.bindOpen(), this.bindClose()
	}
	return t.prototype.makeMarkup = function() {
		return this.content.className = this.config.contentClass, this.closeBtn.className = this.config.closeClass, this.config["static"] ? (this.popup = document.querySelector("." + this.config.popupClass), this.content = this.popup.querySelector("." + this.config.contentClass)) : this.popup.appendChild(this.content), this.popup.appendChild(this.closeBtn), this.config["static"] || document.body.appendChild(this.popup), document.body.appendChild(this.bg)
	}, t.prototype.updateState = function() {
		return this.popup.className = this.config.popupClass + " " + this.popupState, this.bg.className = this.config.bgClass + " " + this.bgState
	}, t.prototype.bindOpen = function() {
		var t, e, i, n, s;
		for (n = this.openLinks, s = [], t = 0, e = n.length; e > t; t++) i = n[t], s.push(i.addEventListener("click", function(t) {
			return function(e) {
				return e.preventDefault(), t.open(e.target.getAttribute("href"))
			}
		}(this)));
		return s
	}, t.prototype.bindClose = function() {
		return this.closeBtn.addEventListener("click", function(t) {
			return function() {
				return t.hide()
			}
		}(this)), this.bg.addEventListener("click", function(t) {
			return function() {
				return t.hide()
			}
		}(this))
	}, t.prototype.open = function(t) {
		return this.config["static"] || this.content.appendChild(document.querySelector(t).cloneNode(!0)), this.show()
	}, t.prototype.show = function() {
		return this.config.beforeShow(), this.popupState = !1, this.bgState = !1, this.updateState(), this.config.responsive || (this.popup.style.height = this.content.offsetHeight + "px"), this.popupState = this.config.visibleClass, this.bgState = this.config.visibleClass, setTimeout(function(t) {
			return function() {
				return t.updateState(), t.config.afterShow()
			}
		}(this))
	}, t.prototype.hide = function() {
		return this.config.beforeHide(), this.popupState = !1, this.bgState = !1, this.updateState(), this.popupState = this.config.hiddenClass, this.bgState = this.config.hiddenClass, setTimeout(function(t) {
			return function() {
				return t.updateState(), t.config["static"] || (t.content.innerHTML = ""), t.config.afterHide()
			}
		}(this), this.config.duration)
	}, t
}();